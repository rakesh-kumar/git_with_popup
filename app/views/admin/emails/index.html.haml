%h2#title Mail &amp; Remind
#action-links
  %ul
=render partial:"shared/noscript"
=render partial:"shared/upgrade_ie"
.pgroup
  %h3 Edit email templates
  %p.note These messages are automatically sent to you or the customer,You can edit the following e-mail template
  %br/
  %ul#email-templates.clearfix
    -KeyValues::Mail::Type.all.each do |type|
      %li
        %a{:href => edit_email_path(emails.find_by_mail_type(type.code))}
          %strong=type.name
          %em=type.des
/ pgroup
.pgroup
  %h3 Orders remind
  %p.note.sb When a customer places a new order when，You can set a reminder e-mail address。
  #order-notification-list
    %table#order-notification-table.data{:cellpadding => "0", :cellspacing => "0"}
      %tr
        %th{:colspan => "4", :style => "padding-left: 10px"} When a customer places an order：
      -subscribes.each do |s|
        =render partial: 'subscription',locals: {s: s}
      %tr#add-subscription
        %td.action-link{:colspan => "4"}
          %p#add-notify
            %span.plus +
            %a{:style => "display:inline"} New e-mail alert
      / end add-subscription
  / end order-notification-list
  %p#add-subscription-btn(style='display:none')
    %input.btn(onclick="$('#add-subscription-details').toggle(); $('#add-subscription-btn').toggle();$('#email-detail').show();" type="button" value="Increase in new orders reminder")
  #add-subscription-details{:style => "display:none"}
    =form_for :subscribe, url: notifications_subscribe_path, remote: true do |f|
      %dl
        %dt Adding a new order to remind
        %dd.sb
          %label{:for => "subscription-type"} Mention Wake
          %select#subscription-type{:name => "subscribe_type"}
            %optgroup{:label => "Remind mode ..."}
              %option{:value => "email"} Email address & hellip;
            %optgroup{:label => "Or send e-mail to one of our users"}
              =options_for_select users.map{|u|[u.name,u.id]}
        %dd#email-detail.details.st.sb{:style => "display:none"}
          %label{:for => "address"} E-mail address
          %input#address{:name => "address", :size => "30", :type => "text", :value => ""}/
        %dd#cellphone-detail.details.sb{:style => "display:none"}
          %p.sb
            %label{:for => "number"} Telephone number
            %input#number{:name => "number", :size => "15", :type => "text", :value => ""}/
          %p.note.st.sb
        %dd.sst.btn-divider.cl
          %input.btn{:name => "commit", :type => "submit", :value =>"Save" }
          =w('or')
          %a#cancel(href="#")=w('cancel')
#webhooks.pgroup
  %h3 Event callback
  %p.note.sb You can subscribe to the product or the order of events，When these events occur，You can send a message to the specified site。
  .section
    %table#webhooks-table.data(cellspacing=0 cellpadding=0)
      %thead
        %tr
          %th Event
          %th(colspan=3) Callback URL Address
      %tbody#webhook_body
        %tr.c.note
          %td(colspan=4 style="padding: 10px 0;") Not currently subscribe to any event
        %tr#add-webhook
          %td.action-link(colspan=4)
            %a(href="#")
              %span.plus +
              Add event callback

    #add-webhook-details.hide
      %form(action="#")
        %dl
          %dt Add event callback
          %dd#webhooks-event.sb
            %label(for="webhook_event") Event
            %select#webhook_event(name="webhook[event]")=options_for_select webhook_events
          %dd#webhooks-callback_url
            %label(for="webhook_callback_url") 回调 URL 地址
            %input#webhook_callback_url(name="webhook[callback_url]" size="40" type="text" value="http://")
              %p.note.st.sb
                When the selected event occurred，Soqueen Will Callback URL Send POST Request，And bring the appropriate data。
          %dd.btn-divider
            %input.btn(name="commit" type="submit" value="Subscription")
            =w('or')
            %a.cancel(href="#")=w('cancel')
%script(id="webhook-item" type="text/x-handlebars-template")
  %td.event_name
    %strong {{{event_name}}}
  %td.callback_url {{{callback_url}}}
  %td.r
    -#
      %a(href="/send_example") Send a test message
  %td.r
    %a.destroy(href="#")=image_tag 'admin/icons/trash.gif', alt: 'Delete'

:javascript
  new App.Controllers.Emails()
  App.webhooks = new App.Collections.Webhooks();
  App.webhooks.refresh(#{webhooks_json});
  new App.Views.Webhook.Index({collection: App.webhooks})
