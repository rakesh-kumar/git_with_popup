%h2#title 
  =t :commodity_management
#action-links
  %ul
    %li#add-prod
      =link_to t(:new_product),new_product_path
    -#
      %li.csv
        %a(href="#" onclick="$('export-products').toggle(); return false;") Export of goods
      %li.csv
        %a(href="/admin/product_imports") Import of goods
=render "shared/noscript"
=render "shared/upgrade_ie"
#export-products.box2.ssb.sst.hide
  %h3 Export your product
  %p.sb
    Your goods will be exported as a
    %strong .csv File
    (Product attributes separated by commas).
  %a.btn(href="/admin/products.csv") Export of goods currently displayed
  %a.btn.sl(href="/admin/product_exports.csv") Export all commodities
#table-filters.box2.sst
  =t :show
  %a#vendor-filter-link(href="#")=search_label :vendor, t(:all_manufacturers)
  =t :and
  %a#type-filter-link(href="#")=search_label :product_type, t(:all_types)
  =t :goods
  #vendor-status-select.filter-select
    %ul.dropdown.hide(style='left: -153px')
      %li
        %strong Firm
      -vendors.each do |vendor|
        %li=link_to vendor.name, product_search_path(vendor_eq: vendor.name)
      %li.filter-show-all.current=link_to "Show all", product_search_path(vendor_eq: nil)
  #type-status-select.filter-select
    %ul.dropdown.hide(style='left: -86px')
      %li
        %strong Product Type
      -types.each do |product_type|
        %li=link_to product_type.name, product_search_path(product_type_eq: product_type.name)
      %li.filter-show-all.current=link_to "Show all", product_search_path(producty_type_eq: nil)
  %ul.segmented.fr
    %li
      %a.btn.active(href="#{products_path}") 
        =t :list_view
    %li
      %a.btn(href="#{inventory_products_path}")> 
        =t :inventory_view
/ PRODUCTS LIST
.listing.sst
  -if products.size.zero?
    =render 'get_start'
  -else
    #products
      %form#batch-form(action="/admin/products/set" method="post")
        / PRODUCTS LIST
        .listing
          #product-container
            %table#product-table.standard-table.ssb.sticky-area(cellpadding="0" cellspacing="0")
              %thead.sticky-header.sticky-inactive
                %tr#product-controls.hide
                  %th.bulk-editor(colspan=10 style="width:907px")
                    %select#product-select(name="operation")
                      %option(selected="selected" style="color: rgb(136, 136, 136);" value="") Select an action ...
                      %option.indent(value="publish") Release
                      %option.indent(value="unpublish") Hide
                      %option.indent(value="destroy") Delete
                      %optgroup(label="Adding custom collection:")
                        -custom_collections.each do |collection|
                          %option(value="add_to_collection-#{collection.id}")=collection.title
                    -#
                      #multipage-page.hide
                        All
                        %b#multipage-page-count ###
                        On This Page has been selected commodities.
                        %a#multipage-select-link(href="#" onclick="return false")
                          Select all
                          %b#multipage-page-total ###
                          Commodity
                      #multipage-all(style="display: none")
                        %b#multipage-all-count ###
                        All pages have been selected commodities.
                        %a#multipage-clear-link(href="#" onclick="return false")  Clear selected items
                    %span#product-count
                %tr
                  %th.nosort.sortcol(style="width: 16px;")
                    %input#select-all(type="checkbox")/
                  %th.nosort.sortcol(style="width: 12px; text-align: center ! important;") &nbsp;
                  %th#product-col.sortcol.sortasc(style="padding-left: 3px; min-width: 150px;") 
                    =t :commodity
                  %th.nosort.sortcol 
                    =t :stock
                  %th.sortcol.number(style="text-align: center;") 
                    =t :total
              %tbody
#btm-nav.act-screen
  #pagination

%script(id="show-product-item" type="text/x-handlebars-template")
  %td(style="padding-right: 5px; vertical-align: middle;")
    %input.selector(id="checkbox-{{{id}}}" name="products[]" type="checkbox" value="{{{id}}}")
  %td.list-image(style="text-align: center ! important;")
    %label(for="checkbox-{{{id}}}")
      %img(src="{{{index_photo}}}")
  %td(style="padding-left: 3px; vertical-align: middle;")
    %p
      %a(href="/admin/products/{{{id}}}" title="Permalink: {{{handle}}}") {{{title}}}
      %span(class="status-hidden {{#if published}}hide{{/if}}" style="margin:0") Hide
    %p.list-product-type {{{product_type}}}
    %p.list-vendor {{{vendor}}}
  %td.list-variants
    .expand-collapse-info.notification.hide
      %p(style="position: absolute; top: 11px")
        %a.expand(href="#")=image_tag 'admin/icons/arrow_right_small.png'
        %a.collapse.hide(href="#")=image_tag 'admin/icons/arrow_down_small.png'
    %ul.variant-list.nobull.product-list-option-1
      {{#each variants}}
      %li.variant-list-item
        {{#if option1}}
        %p.note(style="font-size: 9px; line-height: 11px; margin: 0") {{option1}}
        {{/if}}
        {{#if option2}}
        %p.note(style="font-size: 9px; line-height: 11px; margin: 0") {{option2}}
        {{/if}}
        {{#if option3}}
        %p.note(style="font-size: 9px; line-height: 11px; margin: 0") {{option3}}
        {{/if}}
        %span.large(style="font-size: 14px;line-height: 25px") {{#if inventory_quantity}} {{inventory_quantity}} {{else}} &infin; {{/if}}
        %br/
        .variant-tip.newtip.hide
          .default
            .content {{#if sku}}{{sku}}{{else}}没有SKU{{/if}}
      {{/each}}
  %td.list-total(style="text-align: center; vertical-align: middle;")
    %span(style="font-size: 18px") {{{quantity_sum}}}

=content_for :footer_javascripts do # issues#310
  :javascript
    task_name = 'add_product';

    App.init = function(){
      new App.Controllers.Products();
      Backbone.history.start();
    }

    App.products = new App.Collections.Products();
    App.products.refresh(#{@products_json});
    new App.Views.Product.Index.Index({collection: App.products})
